using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
using Atlas.Users.Domain.Entities.UserEntity;
using Atlas.Shared.Infrastructure.Integration.Inbox;
using Atlas.Shared.Infrastructure.Integration.Outbox;
using Atlas.Shared.Infrastructure.CommandQueue;

namespace Atlas.Users.Infrastructure.Persistance;

public sealed class UsersDatabaseContext: IdentityDbContext<User, IdentityRole<Guid>, Guid>
{
    public UsersDatabaseContext(DbContextOptions<UsersDatabaseContext> options) : base(options) { } 

    /// <summary>
    /// Configures the model for the database context during the model creation process.
    /// </summary>
    /// <param name="modelBuilder">The builder used to construct the model for the database context.</param>
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);

        modelBuilder.HasDefaultSchema(UsersConstants.Database.SchemaName);

        // Remove "AspNet" prefix from table names (auto-generated by AspNet Identity)
        foreach (var entity in modelBuilder.Model.GetEntityTypes())
            entity.SetTableName(entity.GetTableName()?.Replace("AspNet", ""));

        modelBuilder.ApplyConfigurationsFromAssembly(typeof(UsersDatabaseContext).Assembly);

        modelBuilder.AddInbox(UsersConstants.Database.SchemaName);
        modelBuilder.AddOutbox(UsersConstants.Database.SchemaName);
        modelBuilder.AddCommandMessageQueue(UsersConstants.Database.SchemaName);
    }

    /// <summary>
    /// Represents a collection of <see cref="User"/> in the context, or that can be queried from the database.
    /// </summary>
    public override DbSet<User> Users { get; set; }

    /// <summary>
    /// Represents a collection of <see cref="InboxMessage"/> in the context, or that can be queried from the database.
    /// </summary>
    public DbSet<InboxMessage> Inbox { get; set; }

    /// <summary>
    /// Represents a collection of <see cref="OutboxMessage"/> in the context, or that can be queried from the database.
    /// </summary>
    public DbSet<OutboxMessage> Outbox { get; set; }
}